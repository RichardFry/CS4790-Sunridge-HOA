@model SunridgeHOA.Areas.Owner.Models.LotEditVM

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var inventory = ViewBag.Inventory as List<Inventory>;
}

<h2>Edit</h2>

<h4>Lot</h4>
<hr />
<form asp-action="Edit">
    <div class="row">

        <div class="col-md-6">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Lot.LotId" />
            <input type="hidden" asp-for="Address.Id" />

            @{
                var isAdmin = User.IsInRole("Admin");
                var readOnly = isAdmin ? "" : "readonly";
            }

            <div class="form-group">
                <label asp-for="Lot.LotNumber" class="control-label"></label>
                <input asp-for="Lot.LotNumber" class="form-control" readonly="@readOnly" />
                <span asp-validation-for="Lot.LotNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Lot.TaxId" class="control-label"></label>
                <input asp-for="Lot.TaxId" class="form-control" />
                <span asp-validation-for="Lot.TaxId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.StreetAddress" class="control-label"></label>
                <input asp-for="Address.StreetAddress" class="form-control" />
                <span asp-validation-for="Address.StreetAddress" class="text-danger"></span>
            </div>
        </div>
        @if (isAdmin)
        {
            <div class="col-md-5">
                @{
                    var owners = ViewBag.OwnerList as List<Owner>;
                }
                <div class="form-group">
                    <label asp-for="OwnerIds" class="control-label"></label>
                    <br />
                    <select asp-for="OwnerIds" id="owners" multiple="multiple" class="form-control">
                        @{
                            foreach (var owner in owners)
                            {
                                var selected = Model.OwnerIds.Contains(owner.OwnerId) ? "selected" : "";
                                <!option value="@owner.OwnerId" @selected>@owner.FullName</!option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label class="control-label">Primary Owner</label>
                    <select asp-for="OwnerId" id="primary" class="form-control">
                        <option value="-1" hidden>---</option>
                        @{
                            foreach (var owner in owners)
                            {
                                var hidden = !Model.OwnerIds.Contains(owner.OwnerId) ? "hidden" : "";
                                var selected = Model.OwnerId == owner.OwnerId ? "selected" : "";
                                @* need exclamation point so @hidden and @selected evaluate properly *@
                                <!option value="@owner.OwnerId" @hidden @selected>@owner.FullName</!option>
                            }
                        }
                    </select>
                    <span asp-validation-for="OwnerId"></span>
                </div>
                <h5>Items Present on Lot</h5>
                @foreach (var item in inventory)
                {
                    <div class="form-group">
                        @if (Model.SelectedItems.Contains(item.InventoryId))
                        {
                            <input name="SelectedItems" type="checkbox" value="@item.InventoryId" checked />
                        }
                        else
                        {
                            <input name="SelectedItems" type="checkbox" value="@item.InventoryId" />
                        }
                        <label class="control-label">@item.Description</label>

                    </div>
                }
            </div>


        }
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script src="https://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
            type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $('#owners').multiselect({
                enableFiltering: true
            });
        });

        let oldPrimaryVal = $('#primary').find('option:selected').val();
        console.log(oldPrimaryVal);

        // update the selected primary value
        $('#primary').change(() => {
            oldPrimaryVal = $('#primary').children('option:selected').val();
        });

        $('#owners').change(() => {
            // hide all options in #primary
            $('#primary option').each((index, item) => {
                $(item).attr('hidden', 'hidden');
            })

            let primaryInList = false;
            // unhide all options in #primary that are selected in #owners
            let selected = $('#owners').find('option:selected');
            selected.each((index) => {
                let val = selected[index].getAttribute('value');
                $('#primary option[value="' + val + '"]').removeAttr('hidden');
                if (val == oldPrimaryVal) {
                    primaryInList = true;
                }
            });

            // if the currently selected primary owner is deselected, select default value
            if (!primaryInList) {
                console.log('here');
                $('#primary option[value="-1"]').prop('selected', true);
            }
        });
    </script>
    <script type="text/javascript">

    </script>
}